program "Bounce3"

breed Turtle (x, y, z, dx, dy, dz, r, g, b, a)
breed Filler (x, y, z)
patch Field (nx, ny, nz, r, g, b, a)

def setColor() {
  this.r = this.x / 512.0;
  this.g = this.y / 512.0;
  this.b = this.z / 512.0;
  this.a = 1.0;
}

def clear(field) {
  field.r = 0.0;
  field.g = 0.0;
  field.b = 0.0;
  field.a = 0.0;
  field.nx = 0.0;
  field.ny = 0.0;
  field.nz = 0.0;
}

def fillSphere(cx, cy, cz, r, field) {
  var dx = this.x - cx;
  var dy = this.y - cy;
  var dz = this.z - cz;
  var dr = sqrt(dx * dx + dy * dy + dz * dz);
  if (dr < r) {
    field.r = 0.2;
    field.g = 0.2;
    field.b = 0.8;
    field.a = 1.0;
    field.nx = dx / r;
    field.ny = dy / r;
    field.nz = dz / r;
  }
}

def bounce(field) {
  var nx = field.nx;
  var ny = field.ny;
  var nz = field.nz;
  var dx = this.dx;
  var dy = this.dy - 0.01;
  var dz = this.dz;
  var dot = dx * nx + dy * ny + dz * nz;
  var rx = dx;
  var ry = dy;
  var rz = dz;
  var origV = sqrt(dx * dx + dy * dy + dz * dz);

  if (dot < 0.0) {
    rx = dx - 2.0 * dot * nx;
    ry = dy - 2.0 * dot * ny;
    rz = dz - 2.0 * dot * nz;
    var norm = sqrt(rx * rx + ry * ry * rz * rz);
    rx = rx / (norm / origV);
    ry = ry / (norm / origV);
    rz = rz / (norm / origV);
  }

  var newX = this.x + dx;
  var newY = this.y + dy;
  var newZ = this.z + dz;

  if (newX < 0.0) {
    newX = -newX;
    rx = -rx * 0.9;
  }
  if (newX > u_resolution.x) {
    newX = u_resolution.x - (newX - u_resolution.x);
    rx = -rx * 0.9;
  }

  if (newY < 0.0) {
    newY = mod(newY, u_resolution.y);
    ry = -0.1;
  }
  if (newY > u_resolution.y) {
    newY = u_resolution.y - (newY - u_resolution.y);
    ry = -ry;
  }

  if (newZ < 0.0) {
    newZ = -newZ;
    rz = -rz * 0.9;
  }
  if (newZ > u_resolution.z) {
    newZ = u_resolution.z - (newZ - u_resolution.z);
    rz = -rz;
  }


  this.x = newX;
  this.y = newY;
  this.z = newZ;
  this.dx = rx;
  this.dy = ry;
  this.dz = rz;
}

static setup() {
  Filler.fillCuboid("x", "y", "z", 512, 512, 512, 8);
  Turtle.setCount(900000);
  Turtle.fillRandom("x", 0, 512);
  Turtle.fillRandom("y", 256, 512);
  Turtle.fillRandom("z", 0, 512);
  Turtle.fillRandomDir3("dx", "dy", "dz");
  Turtle.setColor();
}

static loop(env) {
  Filler.clear(Field);
  Filler.fillSphere(75, 75, 75, 200, Field);
  Turtle.bounce(Field);
  Turtle.render();
  Field.render();
}
